on: [push]

env:
  REGISTRY_NAME: appscr
  CLUSTER_NAME: appsaks
  CLUSTER_RESOURCE_GROUP: apps_rg
  NAMESPACE: default
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: Install dependencies
      run: pip install --upgrade pip && pip install --no-cache-dir -r ./src/requirements.txt

    - name: Run unit tests
      run: pytest --cov=src tests/ --cov-report=xml

    - name: Scan Quality with SonarCloud
      uses: sonarsource/sonarcloud-github-action@master
      with:
          projectBaseDir: src
          args: >
            -Dsonar.organization=p-cuadros
            -Dsonar.projectKey=bp-challenge
            -Dsonar.python.coverage.reportPaths=coverage.xml
          
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - name: Connect to Azure Container registry (ACR)
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: Container build and push to a Azure Container registry (ACR)
    - run: |
        docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/bp-challenge:${{ github.sha }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/bp-challenge:${{ github.sha }}
    
    - name: Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    - name: Create namespace if doesn't exist
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    - name: Create image pull secret for Azure Container registry (ACR)
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
    
    - name: Deploy app to AKS
    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/aks_app.yaml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/bp-challenge:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}